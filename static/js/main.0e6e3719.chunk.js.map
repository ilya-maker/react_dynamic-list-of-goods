{"version":3,"sources":["components/GoodList.tsx","components/api.ts","components/Button.tsx","App.tsx","index.tsx"],"names":["GoodList","goods","map","id","color","name","className","getGoodsFromApi","fetch","then","response","json","Button","buttonsInit","title","event","type","key","onClick","App","state","loading","hasError","handleAllGoods","getGoods","handleRedGoods","goodsList","setState","filter","good","sort","a","b","localeCompare","catch","handleFiveGoods","slice","this","length","Component","ReactDOM","render","document","getElementById"],"mappings":"6OAMaA,G,MAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvC,4BACGA,EAAMC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OACT,wBAAIC,UAAWF,GAAf,UACMD,EADN,aACaE,UCRNE,EAAkB,WAC7B,OAAOC,MAHO,yEAIXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,WCElBC,EAA0B,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAH,OACrC,4BAEIA,EAAYX,KAAI,gBAAGC,EAAH,EAAGA,GAAIW,EAAP,EAAOA,MAAOC,EAAd,EAAcA,MAAd,OACd,4BACEC,KAAK,SACLC,IAAKd,EACLG,UAAU,SACVY,QAAS,kBAAMH,MAEdD,QC8FIK,E,4MAjGbC,MAAe,CACbnB,MAAO,GACPoB,SAAS,EACTC,UAAU,G,EAGZC,eAAiB,WACf,EAAKC,Y,EAGPC,eAAiB,WACflB,IACGE,MAAK,SAAAiB,GACJ,EAAKC,SAAS,CACZ1B,MAAOyB,EACJE,QAAO,SAACC,GAAD,MAAiC,QAAfA,EAAKzB,SAC9B0B,MAAK,SAACC,EAAUC,GAAX,OAAwBD,EAAE1B,KAAK4B,cAAcD,EAAE3B,SACvDgB,SAAS,OAGZa,OAAM,WACL,EAAKP,SAAS,CAAEN,SAAS,EAAOC,UAAU,Q,EAIhDa,gBAAkB,WAChB5B,IACGE,MAAK,SAAAiB,GACJ,EAAKC,SAAS,CACZ1B,MAAOyB,EACJI,MAAK,SAACC,EAAUC,GAAX,OAAwBD,EAAE1B,KAAK4B,cAAcD,EAAE3B,SACpD+B,MAAM,EAAG,GACZf,SAAS,OAGZa,OAAM,WACL,EAAKP,SAAS,CAAEN,SAAS,EAAOC,UAAU,Q,EAIhDE,SAAW,WACT,EAAKG,SAAS,CACZN,SAAS,EACTC,UAAU,IAGZf,IACGE,MAAK,SAAAiB,GACJ,EAAKC,SAAS,CAAE1B,MAAOyB,EAAWL,SAAS,OAE5Ca,OAAM,WACL,EAAKP,SAAS,CAAEN,SAAS,EAAOC,UAAU,Q,uDAItC,IAAD,EAC8Be,KAAKjB,MAAlCnB,EADD,EACCA,MAAOoB,EADR,EACQA,QAASC,EADjB,EACiBA,SAClBT,EAA4B,CAChC,CAAEV,GAAI,EAAGW,MAAO,iBAAkBC,MAAOsB,KAAKd,gBAC9C,CAAEpB,GAAI,EAAGW,MAAO,qBAAsBC,MAAOsB,KAAKF,iBAClD,CAAEhC,GAAI,EAAGW,MAAO,iBAAkBC,MAAOsB,KAAKZ,iBAGhD,OAAIJ,EAEA,yCAIAC,EAEA,oCACE,gDACA,4BAAQN,KAAK,SAASE,QAASmB,KAAKb,UAApC,eAKDvB,EAAMqC,OAUT,oCACE,qDACA,kBAAC,EAAD,CAAUrC,MAAOA,IACjB,kBAAC,EAAD,CAAQY,YAAaA,KAXrB,oCACE,uCACA,4BAAQG,KAAK,SAASE,QAASmB,KAAKb,UAApC,mB,GAnFQe,aCRlBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.0e6e3719.chunk.js","sourcesContent":["import React from 'react';\n\ninterface Props {\n  goods: Goods[];\n}\n\nexport const GoodList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(({ id, color, name }) => (\n      <li className={color}>\n        {`${id}. ${name}`}\n      </li>\n    ))}\n  </ul>\n);\n","const API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport const getGoodsFromApi = () => {\n  return fetch(API_URL)\n    .then(response => response.json());\n};\n","import React from 'react';\n\ninterface Props {\n  buttonsInit: TypeButton[];\n}\n\nexport const Button: React.FC<Props> = ({ buttonsInit }) => (\n  <ul>\n    {\n      buttonsInit.map(({ id, title, event }) => (\n        <button\n          type=\"button\"\n          key={id}\n          className=\"button\"\n          onClick={() => event()}\n        >\n          {title}\n        </button>\n      ))\n    }\n  </ul>\n);\n","import React, { Component } from 'react';\nimport './App.css';\nimport { GoodList } from './components/GoodList';\nimport { getGoodsFromApi } from './components/api';\nimport { Button } from './components/Button';\n\ninterface State {\n  goods: Goods[];\n  loading: boolean;\n  hasError: boolean;\n}\n\nclass App extends Component {\n  state: State = {\n    goods: [],\n    loading: false,\n    hasError: false,\n  };\n\n  handleAllGoods = () => {\n    this.getGoods();\n  };\n\n  handleRedGoods = () => {\n    getGoodsFromApi()\n      .then(goodsList => {\n        this.setState({\n          goods: goodsList\n            .filter((good: Goods) => (good.color === 'red'))\n            .sort((a: Goods, b: Goods) => a.name.localeCompare(b.name)),\n          loading: false,\n        });\n      })\n      .catch(() => {\n        this.setState({ loading: false, hasError: true });\n      });\n  };\n\n  handleFiveGoods = () => {\n    getGoodsFromApi()\n      .then(goodsList => {\n        this.setState({\n          goods: goodsList\n            .sort((a: Goods, b: Goods) => a.name.localeCompare(b.name))\n            .slice(0, 5),\n          loading: false,\n        });\n      })\n      .catch(() => {\n        this.setState({ loading: false, hasError: true });\n      });\n  };\n\n  getGoods = () => {\n    this.setState({\n      loading: true,\n      hasError: false,\n    });\n\n    getGoodsFromApi()\n      .then(goodsList => {\n        this.setState({ goods: goodsList, loading: false });\n      })\n      .catch(() => {\n        this.setState({ loading: false, hasError: true });\n      });\n  };\n\n  render() {\n    const { goods, loading, hasError } = this.state;\n    const buttonsInit: TypeButton[] = [\n      { id: 1, title: 'Load All goods', event: this.handleAllGoods },\n      { id: 2, title: 'Load 5 first goods', event: this.handleFiveGoods },\n      { id: 3, title: 'Load red goods', event: this.handleRedGoods },\n    ];\n\n    if (loading) {\n      return (\n        <p>Loading...</p>\n      );\n    }\n\n    if (hasError) {\n      return (\n        <>\n          <p>Error with server</p>\n          <button type=\"button\" onClick={this.getGoods}>Load again</button>\n        </>\n      );\n    }\n\n    if (!goods.length) {\n      return (\n        <>\n          <p>No goods</p>\n          <button type=\"button\" onClick={this.getGoods}>Load goods</button>\n        </>\n      );\n    }\n\n    return (\n      <>\n        <h1>Dynamic list of Goods</h1>\n        <GoodList goods={goods} />\n        <Button buttonsInit={buttonsInit} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}